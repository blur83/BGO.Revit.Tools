<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAUAEBAAAAEAIACxAAAAVgAAABgYAAABACAAwQAAAAcBAAAgIAAAAQAgAMQAAADIAQAAMDAAAAEA
        IAA1AQAAjAIAAEBAAAABACAAVQEAAMEDAACJUE5HDQoaCgAAAA1JSERSAAAAEAAAABAIBgAAAB/z/2EA
        AAABc1JHQgCuzhzpAAAAa0lEQVQ4T2NkoBAwUqifYZgZUMHAwKBOZJicZ2BgmARSixwG+xkYGByINGAD
        AwNDILoBdQwMDJpEGnCGgYGhF92ANgYGBl0iDTjBwMDQSnUv5DMwMKgQ6YJLDAwMs9FdQKReVGXDLCWS
        FQYAJbAMESCw5kYAAAAASUVORK5CYIKJUE5HDQoaCgAAAA1JSERSAAAAGAAAABgIBgAAAOB3PfgAAAAB
        c1JHQgCuzhzpAAAAe0lEQVRIS+2UIQ6AQAwE516E4hkoDEHxDSSOgMGQ4HgFFsm7CAIDOS6kaWpa3d3N
        TpMGlCco++MBScKO6DeiGaiTqu+FCejulecNVqARBvRAaxZQAJmwwQHssQYVkAsDLvPNDJH6kQegFCJa
        gDGGSOj9lvsvSiJ1RPaITrqwEBnCTRvOAAAAAElFTkSuQmCCiVBORw0KGgoAAAANSUhEUgAAACAAAAAg
        CAYAAABzenr0AAAAAXNSR0IArs4c6QAAAH5JREFUWEft1bENwkAQRNHnHiiAkAJoiEqgFHdCB8SQktgp
        HaDLCGxdtDqCGWnSndHXrnYyWNPgfCkQAiEQAlsEjmiu0BPr7+CtAjdcK9JxwZwCf0/ghOYKPfDuETij
        uUJ3vHoFcgUhcEBzhRZ8ektYEbw7M+84BEIgBIYT+AJBrxghp5vYUQAAAABJRU5ErkJggolQTkcNChoK
        AAAADUlIRFIAAAAwAAAAMAgGAAAAVwL5hwAAAAFzUkdCAK7OHOkAAADvSURBVGhD7Zc9EgFBGETfCogF
        cjeQCgSu4F7u4QAO4DZilECklEBJ2KrZ7lo1qzfv/mbem/1rqPxqKl8/2cCvDcZADIgEcoREgHI8BmSE
        YkEMiADleAzICMWCQRtYAjsRkCu+AC6fytoMrIGDawVizxQ4ZQMiRSUeAwo9R7aTgRWwd0w3dMyBc+lN
        PALGhuGOitu3krbH6ASYOaYbOo7AvdRA3gMG8q+KTjdxDMTAm8B/HqHnJ+zWeAyUqg1wLX2MKgN7yw76
        j6w3isqgGFDoObIx4KCodMSAQs+RjQEHRaUjBhR6jmwMOCgqHdUbeACt4h8x7DmJPQAAAABJRU5ErkJg
        golQTkcNChoKAAAADUlIRFIAAABAAAAAQAgGAAAAqmlx3gAAAAFzUkdCAK7OHOkAAAEPSURBVHhe7Zah
        0YJhDIPDaGzAEuzxS8ZgFASSO+wvGYAdwOBTEdFeH2zf6xfSpM1By3+H5f9fEIACljOABZYLgCWIBbDA
        cgawwHIBcAWwABZYzgAWWC4ArgAWKFrgr/iu07OXpKsDVFXAxzVqWL9JOjpcEOAY+tVRQJGoTs+wADuA
        JcgViJ1BGyg6bb8fln9JF4ermgNcn7F1CCiO7ll81+nZQ9LZAaoqgCTomGxYJwmSBEmCJMFYEuQKNNzy
        DlL0Cpzc1xrW35LuDlc1CLk+Y+sQMHZ0IeAoIETk2DYoYOzoQsBRQIjIsW1QwNjRhYCjgBCRY9uggLGj
        CwFHASEix7ZBAWNHFwKOAkJEjm3zBRecKEF3mbqNAAAAAElFTkSuQmCC
</value>
  </data>
</root>